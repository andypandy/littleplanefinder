/*! littleplanefinder 2014-02-04 */
function Modal(){}var modal=new Modal;$(function(){$("body").on("click","#search-table tbody tr td",function(){$(this).hasClass("jqIgnore")||$(this).children("span").hasClass("jqIgnore")||($(this).parent("tr").hasClass("hover")?$(this).parent("tr").removeClass("hover"):$(this).parent("tr").addClass("hover"))}),$(".blackbox").click(function(){modal.close()})}),Modal.prototype.open=function(){$("body").addClass("modal-open"),$(".blackbox").css("height",$(document).height()),$(".blackbox, .modal").fadeIn(200)},Modal.prototype.fill=function(html){$(".modal").html(html)},Modal.prototype.resize=function(){var height=$(window).height(),width=$(window).width();$(".modal").css({height:height-40,width:width-.3*width,marginLeft:-(width-.3*width)/2})},Modal.prototype.close=function(){$("body").removeClass("modal-open"),$(".blackbox, .modal").fadeOut(200)},angular.module("myApp",["ngResource","ngRoute","myApp.services","myApp.directives","myApp.controllers"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"partial/search"}).when("/planes/:planeId",{templateUrl:"partial/edit"}).when("/create",{templateUrl:"partial/create"}).otherwise({redirectTo:"/"})}]).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!1),$locationProvider.hashPrefix("!")}]),angular.module("myApp.services",[]).service("Planes",["$resource",function($resource){return $resource("api/v1/planes/:planeId",{planeId:"@_id"},{update:{method:"PUT"}})}]).service("SearchFields",[function(){var searchFields=[{label:"Make",field:"make",type:"string",visible:!0},{label:"Model",field:"model",type:"string",visible:!0},{label:"Model No.",field:"modelNumber",type:"string",visible:!0},{label:"POH",field:"poh",type:"file_with_preview",visible:!0},{label:"Cruise Speed (kts.)",field:"cruiseSpeedKts",type:"numeric",visible:!0},{label:"Top Speed (kts.)",field:"topSpeedKts",type:"numeric",visible:!1},{label:"Stall Speed Dirty (kts.)",field:"stallSpeedDirtyKts",type:"numeric"},{label:"Landing gear",field:"gear",type:"select",options:[{value:"",label:"Any"},{value:"fixed",label:"Fixed"},{value:"retractable",label:"Retractable"}],visible:!0},{label:"Mixture",field:"mixture",type:"select",options:[{value:"",label:"Any"},{value:"injected",label:"Fuel injected"},{value:"carburated",label:"Carburated"}],visible:!0},{label:"Engine Make",field:"engineMake",type:"string",visible:!0},{label:"Engine Model",field:"engineModel",type:"string",visible:!0},{label:"Engine Model (Specific)",field:"engineModelSpecific",type:"string",visible:!1},{label:"Horsepower",field:"horsepower",type:"numeric",visible:!0},{label:"Gross Weight (lbs.)",field:"grossWeightPounds",type:"numeric",visible:!0},{label:"Empty Weight (lbs.)",field:"emptyWeightPounds",type:"numeric",visible:!0},{label:"Usable Weight (lbs.)",field:"usableWeight",type:"numeric",visible:!0},{label:"Full Fuel Usable Weight (lbs.)",field:"fullFuelUsableWeight",type:"numeric",visible:!0},{label:"Fuel Capacity (gal.)",field:"fuelCapacityGallons",type:"numeric",visible:!0},{label:"Range (nm)",field:"rangeNM",type:"numeric",visible:!0},{label:"Take Off Ground Roll (ft.)",field:"takeOffGroundRollFt",type:"numeric",visible:!1},{label:"Take Off Over 50 Ft. (ft.)",field:"takeOffOver50FtFt",type:"numeric",visible:!1},{label:"Landing Ground Roll (ft.)",field:"landingGroundRollFt",type:"numeric",visible:!1},{label:"Landing Over 50 Ft. (ft.)",field:"landingOver50FtFt",type:"numeric",visible:!1},{label:"Climb Rate (fpm.)",field:"climbRateFpm",type:"numeric",visible:!1},{label:"Ceiling (ft.)",field:"ceilingFt",type:"numeric",visible:!1}];return searchFields}]),angular.module("myApp.directives",[]).directive("numericSearchField",function(){function template(){return'<label>{{label}}</label><br><input ng-model="field.min" placeholder="Min" size="8"><input ng-model="field.max" placeholder="Max" size="8">'}return{restrict:"E",scope:{label:"@",field:"="},template:template()}}).directive("textSearchField",function(){function template(){return'<label>{{label}}</label><br><input ng-model="field" placeholder="Enter text">'}return{restrict:"E",scope:{label:"@",field:"="},template:template()}}).directive("selectSearchField",function(){function template(){return'<label>{{label}}</label><br><select ng-model="field"><option ng-repeat="option in options" value="{{option.value}}">{{option.label}}</option></select>'}return{restrict:"E",scope:{label:"@",field:"=",options:"="},template:template(),link:function(){}}}),angular.module("myApp.controllers",[]).controller("UserCtrl",["$scope","$http",function($scope,$http){$scope.showLoginForm=!1,$scope.loginFormData={},$scope.toggleShowLoginForm=function(){$scope.showLoginForm=1==$scope.showLoginForm?!1:!0},$scope.login=function(){$http({method:"POST",url:"/login",data:$scope.loginFormData}).success(function(data){1==data.success?window.location.reload():$scope.loginErrorMessage=data.message})},$scope.logout=function(){window.location.href="/logout"}}]).controller("PlaneCtrl",["$scope","$routeParams","$location","$http","Planes","SearchFields",function($scope,$routeParams,$location,$http,Planes,SearchFields){$scope.searchFields=SearchFields,$scope.searchFields.forEach(function(item){""!=item.field&&""!=item.type&&("numeric"==item.type&&($scope[item.field]={}),("select"==item.type||"string"==item.type)&&($scope[item.field]=""))}),$scope.editPlane=function(){console.log($routeParams),Planes.get({planeId:$routeParams.planeId},function(plane){$scope.plane=plane})},$scope.updatePlane=function(){var plane=$scope.plane;plane.$update(function(){$scope.plane={},$location.path("#!/search")})},$scope.search=function(){function addFullFuelUsableWeight(planes,callback){return planes.forEach(function(plane,i){plane.grossWeightPounds&&plane.emptyWeightPounds&&plane.fuelCapacityGallons&&(planes[i].fullFuelUsableWeight=plane.grossWeightPounds-plane.emptyWeightPounds-6*plane.fuelCapacityGallons)}),callback(planes)}function addUsableWeight(planes,callback){return planes.forEach(function(plane,i){plane.grossWeightPounds&&plane.emptyWeightPounds&&(planes[i].usableWeight=plane.grossWeightPounds-plane.emptyWeightPounds)}),callback(planes)}$scope.showAllPlanes=!1,$scope.$watch("showAllPlanes",function(){$scope.showAllPlanesText=$scope.showAllPlanes?"Rehide hidden planes":"Show hidden planes"}),$scope.sort={column:["make","model"],descending:!1},Planes.query(function(planes){planes.forEach(function(plane,index){planes[index].hidden=!1}),addFullFuelUsableWeight(planes,function(updatedPlanes){planes=updatedPlanes,addUsableWeight(planes,function(updatedPlanes){$scope.planes=updatedPlanes})})}),$scope.toggleShowAllPlanes=function(){$scope.showAllPlanes=$scope.showAllPlanes?!1:!0},$scope.toggleHidden=function(plane){plane.hidden=plane.hidden?!1:!0},$scope.changeSort=function(field){$scope.sort.column==field?$scope.sort.descending=!$scope.sort.descending:($scope.sort.column=field,$scope.sort.descending=!1)},$scope.previewFile=function(url){if(void 0!=url){console.log("Open preview: "+url);var height=$(window).height()-40,width=$(window).width();width-=.3*width;var html='<iframe src="http://docs.google.com/viewer?url='+url+'&embedded=true" width="'+width+'" height="'+height+'" style="border: none;"></iframe>';modal.fill(html),modal.resize(),modal.open()}}},$scope.create=function(){console.log("create 26"),$http({method:"POST",url:"/api/v1/planes",data:$scope.plane}).success(function(){$scope.plane={}}).error(function(){})},$scope.removePlane=function(plane){plane.$remove();for(var i in $scope.planes)$scope.planes[i]===plane&&$scope.planes.splice(i,1)},$scope.searchFieldFilter=function(plane){var ret=!0;return $scope.searchFields.forEach(function(searchField){searchField.field&&("string"==searchField.type?void 0!=plane[searchField.field]&&-1==plane[searchField.field].toLowerCase().indexOf($scope[searchField.field].toLowerCase())&&(ret=!1):"select"==searchField.type?$scope[searchField.field]&&""!=$scope[searchField.field]&&$scope[searchField.field]!=plane[searchField.field]&&(ret=!1):"numeric"==searchField.type&&$scope[searchField.field]&&(void 0!==$scope[searchField.field].min&&""!=$scope[searchField.field].min&&$scope[searchField.field].min>plane[searchField.field]&&(ret=!1),void 0!==$scope[searchField.field].max&&""!=$scope[searchField.field].max&&$scope[searchField.field].max<plane[searchField.field]&&(ret=!1)))}),ret},$scope.hiddenFilter=function(plane){return 0==$scope.showAllPlanes&&1==plane.hidden?!1:!0}}]),angular.element(document).ready(function(){angular.bootstrap(document,["myApp"])});